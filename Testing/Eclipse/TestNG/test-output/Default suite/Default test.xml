<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-C285B18" failures="0" tests="3" name="Default test" time="0.12" errors="0" timestamp="2022-02-10T09:30:03 IST">
  <testcase classname="testing.annotations.Annotations" name="@BeforeTest beforeTest" time="0.054">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: D:\Sandhiya 130\Testing\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: D:\Sandhiya 130\Testing\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:48)
at testing.annotations.Annotations.beforeTest(Annotations.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="testing.annotations.Annotations" name="@BeforeClass beforeClass" time="-1.644465603845E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testing.annotations.Annotations" name="@AfterClass afterClass" time="-1.64446560388E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testing.annotations.Annotations" name="@AfterTest afterTest" time="-1.644465603882E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testing.annotations.Annotations" name="Test2" time="0.0">
    <skipped/>
  </testcase> <!-- Test2 -->
  <testcase classname="testing.annotations.Annotations" name="Test1" time="0.0">
    <skipped/>
  </testcase> <!-- Test1 -->
  <testcase classname="testing.annotations.Annotations" name="Test3" time="0.0">
    <skipped/>
  </testcase> <!-- Test3 -->
</testsuite> <!-- Default test -->
